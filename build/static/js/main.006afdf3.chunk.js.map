{"version":3,"sources":["components/ReusableForm/ReusableForm.js","api/api.js","context/route.js","context/auth.js","components/Login/Login.js","components/UsersTable/UsersTable.js","wissen.jpg","components/Navbar/Navbar.js","protectedRoutes/route.js","App.js","index.js"],"names":["defaultValue","firstName","lastName","email","contactNumber","ssn","address","ReusableForm","props","useState","value","setValue","isSubmitted","setIsSubmitted","handleSubmit","e","a","post","status","setTimeout","console","log","Grommet","theme","grommet","Box","align","justify","width","Form","onChange","nextValue","onReset","onSubmit","FormField","label","name","TextInput","required","MaskedInput","mask","regexp","placeholder","fixed","TextArea","className","direction","margin","top","Button","type","primary","getData","token","get","headers","Authorization","users","login","body","response","logout","RouteContext","createContext","useRoute","useContext","AuthContext","useAuth","password","reveal","Login","setPage","isError","setIsError","setAuthTokens","data","title","isAdminPage","isLoggedin","history","push","useEffect","fill","icon","View","size","Hide","onClick","columns","property","header","UsersTable","setData","isLoading","setIsLoading","authTokens","mounted","then","res","catch","color","height","pad","DataTable","step","withRouter","setNewPage","page","handleLogout","Header","background","gap","Avatar","src","wissen","Nav","ProtectedRoute","Component","component","rest","render","to","pathname","state","from","location","App","existingTokens","localStorage","getItem","JSON","parse","Provider","setItem","stringify","Navbar","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"iYAeMA,EAAe,CACnBC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,cAAe,GACfC,IAAK,GACLC,QAAS,IAyEIC,EAtEa,SAACC,GAAW,IAAD,EACXC,mBAAST,GADE,mBAC9BU,EAD8B,KACvBC,EADuB,OAEFF,oBAAS,GAFP,mBAE9BG,EAF8B,KAElBC,EAFkB,KAG/BC,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,+EAEMC,eAAK,gBAAiBF,EAAEL,OAF9B,OAGI,MAHJ,OAGLQ,SACVP,EAASX,GACTa,GAAe,GACfM,YAAW,WACTN,GAAe,KAEjB,MATe,gDAYjBO,QAAQC,IAAI,WAAZ,MAZiB,yDAAH,sDAelB,OAAQ,cAACC,EAAA,EAAD,CAAUC,MAAOC,UAAjB,SACJ,cAACC,EAAA,EAAD,CAAMC,MAAM,SAASC,QAAQ,SAA7B,SACE,cAACF,EAAA,EAAD,CAAKG,MAAM,SAAX,SACE,eAACC,EAAA,EAAD,CACEnB,MAAOA,EACPoB,SAAU,SAACC,GACTpB,EAASoB,IAEXC,QAAS,kBAAMrB,EAASX,IACxBiC,SAAUnB,EANZ,UAQE,cAACoB,EAAA,EAAD,CAAWC,MAAM,aAAaC,KAAK,YAAnC,SACE,cAACC,EAAA,EAAD,CAAWD,KAAK,gBAElB,cAACF,EAAA,EAAD,CAAWC,MAAM,YAAYC,KAAK,WAAlC,SACE,cAACC,EAAA,EAAD,CAAWD,KAAK,eAElB,cAACF,EAAA,EAAD,CAAWC,MAAM,QAAQC,KAAK,QAAQE,UAAQ,EAA9C,SACE,cAACC,EAAA,EAAD,CACEH,KAAK,QACLI,KAAM,CACJ,CAAEC,OAAQ,cAAeC,YAAa,WACtC,CAAEC,MAAO,KACT,CAAEF,OAAQ,UAAWC,YAAa,MAClC,CAAEC,MAAO,KACT,CAAEF,OAAQ,UAAWC,YAAa,YAIxC,cAACR,EAAA,EAAD,CAAWC,MAAM,iBAAiBC,KAAK,gBAAvC,SACE,cAACC,EAAA,EAAD,CAAWD,KAAK,oBAElB,cAACF,EAAA,EAAD,CAAWC,MAAM,MAAMC,KAAK,MAA5B,SACE,cAACC,EAAA,EAAD,CAAWD,KAAK,UAElB,cAACF,EAAA,EAAD,CAAWC,MAAM,eAAeC,KAAK,UAArC,SACE,cAACQ,EAAA,EAAD,CAAUR,KAAK,cAEhBxB,GAAgB,qBAAKiC,UAAU,UAAf,4CAGjB,eAACpB,EAAA,EAAD,CAAKqB,UAAU,MAAMnB,QAAQ,UAAUoB,OAAQ,CAAEC,IAAK,UAAtD,UACE,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQf,MAAM,UAC3B,cAACc,EAAA,EAAD,CAAQC,KAAK,SAASf,MAAM,SAASgB,SAAO,iB,0BCnF7CC,EAAO,uCAAE,WAAMC,GAAN,eAAArC,EAAA,sEACEsC,cAAI,SAAS,CAC7BC,QAAS,CACPC,cAAe,UAAYH,KAHf,cACZI,EADY,yBAKXA,GALW,2CAAF,sDAQPC,EAAK,uCAAC,WAAMC,GAAN,eAAA3C,EAAA,6DACR4C,EAAU3C,eAAK,SAAS0C,GADhB,kBAEPC,GAFO,2CAAD,sDAULC,EAAM,uCAAC,WAAMR,GAAN,eAAArC,EAAA,sEACMsC,cAAI,UAAU,CAChCC,QAAS,CACPC,cAAe,UAAYH,KAHjB,cACVO,EADU,yBAKTA,GALS,2CAAD,sDClBNE,EAAeC,0BAErB,SAASC,IACd,OAAOC,qBAAWH,G,WCHPI,EAAcH,0BAEpB,SAASI,IACd,OAAOF,qBAAWC,GCapB,IAAMlE,EAAe,CACnBG,MAAO,GACPiE,SAAU,GACVC,QAAQ,GAsGKC,EAnGD,SAAC9D,GAAW,IAAD,EACGC,mBAAST,GADZ,mBAChBU,EADgB,KACTC,EADS,KAEf4D,EAAYP,IAAZO,QAFe,EAGO9D,oBAAS,GAHhB,mBAGhB+D,EAHgB,KAGPC,EAHO,KAIfC,EAAkBP,IAAlBO,cAaF5D,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,+EAEM0C,EAAM3C,EAAEL,OAFd,OAEXkD,EAFW,OAGjBxC,QAAQC,IAAI,WAAYuC,GACpBA,EAASe,MACXD,EAAcd,EAASe,KAAKtB,OAC5BkB,EAAQ,CAAEK,MAAO,cAAeC,aAAa,EAAMC,YAAY,IAC/DtE,EAAMuE,QAAQC,KAAK,YAEnBP,GAAW,GACX9D,EAASX,GACTmB,YAAW,WACTsD,GAAW,KACV,MAbY,gDAgBjBA,GAAW,GACX9D,EAASX,GACTmB,YAAW,WACTsD,GAAW,KACV,KApBc,yDAAH,sDA6BlB,OALAQ,qBAAU,WACRV,EAAQ,CAACK,MAAM,cAAeC,aAAY,EAAMC,YAAW,MAC3D,IAIA,qBAAKjC,UAAU,aAAf,SACE,cAACvB,EAAA,EAAD,CAASC,MAAOC,UAAhB,SACE,cAACC,EAAA,EAAD,CAAKyD,MAAI,EAACxD,MAAM,SAASC,QAAQ,SAAjC,SACE,cAACF,EAAA,EAAD,CAAKG,MAAM,SAAX,SACE,eAACC,EAAA,EAAD,CACEnB,MAAOA,EACPoB,SAAU,SAACC,GACTpB,EAASoB,IAEXC,QAAS,kBAAMrB,EAASX,IACxBiC,SAAUnB,EANZ,UAQE,cAACoB,EAAA,EAAD,CAAWC,MAAM,QAAQC,KAAK,QAAQE,UAAQ,EAA9C,SACE,cAACC,EAAA,EAAD,CACEH,KAAK,QACLI,KAAM,CACJ,CAAEC,OAAQ,cAAeC,YAAa,WACtC,CAAEC,MAAO,KACT,CAAEF,OAAQ,UAAWC,YAAa,MAClC,CAAEC,MAAO,KACT,CAAEF,OAAQ,UAAWC,YAAa,YAIxC,cAACR,EAAA,EAAD,CAAWC,MAAM,WAAWC,KAAK,WAAjC,SACE,cAACC,EAAA,EAAD,CACED,KAAK,WACLc,KAAMxC,EAAM2D,OAAS,OAAS,eAGjCG,GACC,qBAAK3B,UAAU,QAAf,uCAEF,cAACI,EAAA,EAAD,CACEkC,KACEzE,EAAM2D,OAAS,cAACe,EAAA,EAAD,CAAMC,KAAK,WAAc,cAACC,EAAA,EAAD,CAAMD,KAAK,WAErDE,QAAS,kBAAM5E,EAAS,2BAAKD,GAAN,IAAa2D,QAAS3D,EAAM2D,aAGrD,eAAC5C,EAAA,EAAD,CAAKqB,UAAU,MAAMnB,QAAQ,UAAUoB,OAAQ,CAAEC,IAAK,UAAtD,UACE,cAACC,EAAA,EAAD,CAAQd,MAAM,SAASoD,QAlFhB,SAACxE,GACpBwD,EAAQ,CACNK,MAAO,sBACPC,aAAa,EACbC,YAAY,IAEdtE,EAAMuE,QAAQC,KAAK,IAAK,CACtBJ,MAAO,sBACPC,aAAa,OA2EH,cAAC5B,EAAA,EAAD,CAAQC,KAAK,SAASf,MAAM,QAAQgB,SAAO,mB,0BCzGrDqC,G,OAAU,CACd,CAAEC,SAAU,YAAaC,OAAQ,cACjC,CAAED,SAAU,WAAYC,OAAQ,aAChC,CAAED,SAAU,QAASC,OAAQ,iBAC7B,CAAED,SAAU,gBAAiBC,OAAQ,kBACrC,CAAED,SAAU,MAAOC,OAAQ,OAC3B,CAAED,SAAU,UAAWC,OAAQ,kBA0ClBC,EAvCI,SAACnF,GAAW,IAAD,EACJC,mBAAS,IADL,mBACrBkE,EADqB,KACfiB,EADe,OAEInF,oBAAS,GAFb,mBAErBoF,EAFqB,KAEXC,EAFW,KAGpBC,EAAe5B,IAAf4B,WAoBR,OAlBAd,qBAAU,WACR,IAAIe,GAAU,EAYZ,OAXF5C,EAAQ2C,GACLE,MAAK,SAACC,GACDF,IACFJ,EAAQM,EAAIvB,MACdmB,GAAa,OAIdK,OAAM,SAACpF,GACNK,QAAQC,IAAIN,MAEP,WACLiF,GAAU,KAEb,IAEAH,EAEA,qBAAKhD,UAAU,SAAf,SACD,cAAC,IAAD,CAAQK,KAAK,OAAOkD,MAAM,UAAUC,OAAQ,GAAIzE,MAAO,OAKvD,cAACN,EAAA,EAAD,CAASC,MAAOC,UAAhB,SACE,cAACC,EAAA,EAAD,CAAKC,MAAM,SAAS4E,IAAI,QAAxB,SACE,cAACC,EAAA,EAAD,CAAWf,QAASA,EAASb,KAAMA,EAAM6B,KAAM,U,2BClDxC,MAA0B,mCC0D1BC,eAjDK,SAACjG,GAAW,IAAD,EACS2D,IAA9BO,EADqB,EACrBA,cAAeqB,EADM,EACNA,WADM,EAERtF,oBAAS,GAAvBiG,EAFsB,sBAGH1C,IAAlB2C,EAHqB,EAGrBA,KAAMpC,EAHe,EAGfA,QAORqC,EAAY,uCAAG,sBAAA5F,EAAA,sEACI6C,EAAOkC,GADX,OAEK,MAFL,OAEN7E,SACXqD,EAAQ,CACNK,MAAO,sBACPC,aAAa,EACbC,YAAY,IAEdJ,EAAc,IACdgC,GAAW,IATM,2CAAH,qDAclB,OACE,cAACpF,EAAA,EAAD,CAASC,MAAOC,UAAhB,SACE,eAACqF,EAAA,EAAD,CAAQC,WAAW,SAASR,IAAI,QAAhC,UACE,eAAC7E,EAAA,EAAD,CAAKqB,UAAU,MAAMpB,MAAM,SAASqF,IAAI,QAAxC,UACE,cAACC,EAAA,EAAD,CAAQC,IAAKC,IACZP,EAAK/B,SAER,eAACuC,EAAA,EAAD,CAAKrE,UAAU,MAAf,WACI6D,EAAK9B,aACL,cAAC5B,EAAA,EAAD,aACEE,SAAO,EACPhB,MAAM,cACNoD,QA/BQ,WAClBhB,EAAQ,CAAEK,MAAO,cAAeC,aAAa,EAAMC,YAAY,IAC/DtE,EAAMuE,QAAQC,KAAK,YA8BLxE,IAGPmG,EAAK7B,YACJ,cAAC7B,EAAA,EAAD,aAAQE,SAAO,EAAChB,MAAM,SAASoD,QAASqB,GAAkBpG,e,QCpBvD4G,EA1BQ,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,6BACpDxB,EAAe5B,IAAf4B,WACR,OACE,cAAC,IAAD,2BACMwB,GADN,IAEEC,OAAQ,SAAChH,GACP,OAAIuF,GACF3E,QAAQC,IAAI,aAAc0E,GACnB,cAACsB,EAAD,eAAe7G,KAGpB,cAAC,IAAD,CACEiH,GAAI,CACFC,SAAU,SACVC,MAAO,CACLC,KAAMpH,EAAMqH,kBC0BfC,MAlCf,WACE,IAAMC,EAAmBC,aAAaC,QAAQ,UAC1CC,KAAKC,MAAMH,aAAaC,QAAQ,WAChC,GAHS,EAIuBxH,mBAASsH,GAJhC,mBAINhC,EAJM,KAIMrB,EAJN,OAKWjE,mBAAS,CAC/BmE,MAAO,sBACPC,cAAekD,EACfjD,WAAYiD,IARD,mBAKNpB,EALM,KAKApC,EALA,KAgBb,OACE,cAACL,EAAYkE,SAAb,CAAsB1H,MAAO,CAAEqF,aAAYrB,cAN3B,SAACC,GACjBqD,aAAaK,QAAQ,SAAUH,KAAKI,UAAU3D,IAC9CD,EAAcC,KAId,SACE,qBAAK9B,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAACiB,EAAasE,SAAd,CAAuB1H,MAAO,CAAEiG,OAAMpC,WAAtC,UACE,cAACgE,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAInB,UAAW/G,IACjC,cAAC,IAAD,CAAOiI,OAAK,EAACC,KAAK,SAASnB,UAAWhD,IACtC,cAAC,EAAD,CAAgBkE,OAAK,EAACC,KAAK,SAASnB,UAAW3B,iBC/B7D+C,IAASlB,OACP,cAAC,IAAMmB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.006afdf3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { post } from \"axios\";\r\nimport './ReusableForm.css'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Form,\r\n  FormField,\r\n  Grommet,\r\n  MaskedInput,\r\n  TextArea,\r\n  TextInput,\r\n} from \"grommet\";\r\nimport { grommet } from \"grommet/themes\";\r\n\r\nconst defaultValue = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  contactNumber: \"\",\r\n  ssn: \"\",\r\n  address: \"\",\r\n};\r\n\r\nexport const ReusableForm = (props) => {\r\n  const [value, setValue] = useState(defaultValue);\r\n  const [isSubmitted,setIsSubmitted]=useState(false)\r\n  const handleSubmit = async (e) => {\r\n    try {\r\n      const response = await post(\"/users/submit\", e.value);\r\n      if(response.status===200){\r\n        setValue(defaultValue)\r\n        setIsSubmitted(true)\r\n        setTimeout(()=>{\r\n          setIsSubmitted(false)\r\n        },\r\n        2000)\r\n      }\r\n    } catch (e) {\r\n      console.log(\"error is\", e);\r\n    }\r\n  };\r\n  return (<Grommet  theme={grommet}>\r\n      <Box  align=\"center\" justify=\"center\">\r\n        <Box width=\"medium\">\r\n          <Form\r\n            value={value}\r\n            onChange={(nextValue) => {\r\n              setValue(nextValue);\r\n            }}\r\n            onReset={() => setValue(defaultValue)}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <FormField label=\"First Name\" name=\"firstName\">\r\n              <TextInput name=\"firstName\" />\r\n            </FormField>\r\n            <FormField label=\"Last Name\" name=\"lastName\">\r\n              <TextInput name=\"lastName\" />\r\n            </FormField>\r\n            <FormField label=\"Email\" name=\"email\" required>\r\n              <MaskedInput\r\n                name=\"email\"\r\n                mask={[\r\n                  { regexp: /^[\\w\\-_.]+$/, placeholder: \"example\" },\r\n                  { fixed: \"@\" },\r\n                  { regexp: /^[\\w]+$/, placeholder: \"my\" },\r\n                  { fixed: \".\" },\r\n                  { regexp: /^[\\w]+$/, placeholder: \"com\" },\r\n                ]}\r\n              />\r\n            </FormField>\r\n            <FormField label=\"Contact Number\" name=\"contactNumber\">\r\n              <TextInput name=\"contactNumber\" />\r\n            </FormField>\r\n            <FormField label=\"SSN\" name=\"ssn\">\r\n              <TextInput name=\"ssn\" />\r\n            </FormField>\r\n            <FormField label=\"Full Address\" name=\"address\">\r\n              <TextArea name=\"address\" />\r\n            </FormField>\r\n            {isSubmitted && (<div className=\"message\">\r\n          Details Submitted Successfully\r\n    </div>)}\r\n            <Box direction=\"row\" justify=\"between\" margin={{ top: \"medium\" }}>\r\n              <Button type=\"reset\" label=\"Reset\" />\r\n              <Button type=\"submit\" label=\"Submit\" primary />\r\n            </Box>\r\n          </Form>\r\n        </Box>\r\n      </Box>\r\n    </Grommet>\r\n  );\r\n};\r\n\r\nexport default ReusableForm;\r\n","import {get, post} from 'axios'\r\n\r\nexport const getData= async(token)=>{\r\n    const users = await get('/users',{\r\n        headers: {\r\n          Authorization: 'Bearer ' + token \r\n        }})\r\n    return users\r\n}\r\n\r\nexport const login=async(body)=>{\r\n     const response= post('/login',body)\r\n     return response\r\n}\r\n\r\nexport const submit=async(body)=>{\r\n    const response=await post('/users/submit',body)\r\n    return response\r\n}\r\n\r\nexport const logout=async(token)=>{\r\n    const response =await get('/logout',{\r\n        headers: {\r\n          Authorization: 'Bearer ' + token\r\n        }})\r\n    return response\r\n}\r\n\r\n","import { createContext, useContext } from \"react\";\r\n\r\nexport const RouteContext = createContext();\r\n\r\nexport function useRoute() {\r\n  return useContext(RouteContext);\r\n}\r\n","import { createContext, useContext } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Hide, View } from \"grommet-icons\";\r\nimport { login } from \"../../api/api\";\r\nimport { useRoute } from \"../../context/route\";\r\nimport \"./Login.css\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Form,\r\n  FormField,\r\n  Grommet,\r\n  MaskedInput,\r\n  TextInput,\r\n} from \"grommet\";\r\nimport { grommet } from \"grommet/themes\";\r\nimport { useAuth } from \"../../context/auth\";\r\n\r\nconst defaultValue = {\r\n  email: \"\",\r\n  password: \"\",\r\n  reveal: false,\r\n};\r\n\r\nconst Login = (props) => {\r\n  const [value, setValue] = useState(defaultValue);\r\n  const { setPage } = useRoute();\r\n  const [isError, setIsError] = useState(false);\r\n  const { setAuthTokens } = useAuth();\r\n\r\n  const handleCancel = (e) => {\r\n    setPage({\r\n      title: \"Submit Form Details\",\r\n      isAdminPage: false,\r\n      isLoggedin: false,\r\n    });\r\n    props.history.push(\"/\", {\r\n      title: \"Submit Form Details\",\r\n      isAdminPage: false,\r\n    });\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    try {\r\n      const response = await login(e.value);\r\n      console.log('response', response)\r\n      if (response.data) {\r\n        setAuthTokens(response.data.token);\r\n        setPage({ title: \"Users Table\", isAdminPage: true, isLoggedin: true });\r\n        props.history.push('/users')\r\n      } else {\r\n        setIsError(true);\r\n        setValue(defaultValue);\r\n        setTimeout(() => {\r\n          setIsError(false);\r\n        }, 2000);\r\n      }\r\n    } catch (err) {\r\n      setIsError(true);\r\n      setValue(defaultValue);\r\n      setTimeout(() => {\r\n        setIsError(false);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{\r\n    setPage({title:\"Admin Login\", isAdminPage:true, isLoggedin:false})\r\n  },[])\r\n\r\n\r\n  return (\r\n    <div className=\"login-form\">\r\n      <Grommet theme={grommet}>\r\n        <Box fill align=\"center\" justify=\"center\">\r\n          <Box width=\"medium\">\r\n            <Form\r\n              value={value}\r\n              onChange={(nextValue) => {\r\n                setValue(nextValue);\r\n              }}\r\n              onReset={() => setValue(defaultValue)}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              <FormField label=\"Email\" name=\"email\" required>\r\n                <MaskedInput\r\n                  name=\"email\"\r\n                  mask={[\r\n                    { regexp: /^[\\w\\-_.]+$/, placeholder: \"example\" },\r\n                    { fixed: \"@\" },\r\n                    { regexp: /^[\\w]+$/, placeholder: \"my\" },\r\n                    { fixed: \".\" },\r\n                    { regexp: /^[\\w]+$/, placeholder: \"com\" },\r\n                  ]}\r\n                />\r\n              </FormField>\r\n              <FormField label=\"Password\" name=\"password\">\r\n                <TextInput\r\n                  name=\"password\"\r\n                  type={value.reveal ? \"text\" : \"password\"}\r\n                />\r\n              </FormField>\r\n              {isError && (\r\n                <div className=\"error\">Invalid email or password</div>\r\n              )}\r\n              <Button\r\n                icon={\r\n                  value.reveal ? <View size=\"medium\" /> : <Hide size=\"medium\" />\r\n                }\r\n                onClick={() => setValue({ ...value, reveal: !value.reveal })}\r\n              />\r\n\r\n              <Box direction=\"row\" justify=\"between\" margin={{ top: \"medium\" }}>\r\n                <Button label=\"Cancel\" onClick={handleCancel} />\r\n                <Button type=\"submit\" label=\"Login\" primary />\r\n              </Box>\r\n            </Form>\r\n          </Box>\r\n        </Box>\r\n      </Grommet>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getData } from \"../../api/api\";\r\nimport { Grommet, Box, DataTable } from \"grommet\";\r\nimport Loader from 'react-loader-spinner'\r\nimport { grommet } from \"grommet/themes\";\r\nimport { useAuth } from \"../../context/auth\";\r\nimport './UsersTable.css'\r\n\r\nconst columns = [\r\n  { property: \"firstName\", header: \"First Name\" },\r\n  { property: \"lastName\", header: \"Last Name\" },\r\n  { property: \"email\", header: \"Email Address\" },\r\n  { property: \"contactNumber\", header: \"Contact Number\" },\r\n  { property: \"ssn\", header: \"SSN\" },\r\n  { property: \"address\", header: \"Full Address\" },\r\n];\r\n\r\nconst UsersTable = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const [isLoading,setIsLoading]= useState(true)\r\n  const { authTokens } = useAuth();\r\n\r\n  useEffect(() => {\r\n    let mounted = true\r\n    getData(authTokens)\r\n      .then((res) => {\r\n        if (mounted) {\r\n          setData(res.data);  \r\n        setIsLoading(false)\r\n      }\r\n        \r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n      return function cleanup() {\r\n        mounted = false\r\n    }\r\n  }, []);\r\n\r\n  if(isLoading){\r\n   return ( \r\n     <div className=\"loader\">\r\n    <Loader type=\"Grid\" color=\"#00BFFF\" height={80} width={80} />\r\n    </div>\r\n      )\r\n  }\r\n  return (\r\n    <Grommet theme={grommet}>\r\n      <Box align=\"center\" pad=\"large\">\r\n        <DataTable columns={columns} data={data} step={10} />\r\n      </Box>\r\n    </Grommet>\r\n  );\r\n};\r\n\r\nexport default UsersTable;\r\n","export default __webpack_public_path__ + \"static/media/wissen.c081130c.jpg\";","import React, {  useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/auth\";\r\nimport { logout } from \"../../api/api\";\r\nimport { Avatar, Box, Grommet, Header, Nav, Button } from \"grommet\";\r\nimport { grommet } from \"grommet/themes\";\r\nimport { useRoute } from \"../../context/route\";\r\nimport wissen from \"../../wissen.jpg\";\r\n\r\nconst OnHeaderNav = (props) => {\r\n  const { setAuthTokens, authTokens } = useAuth();\r\n  const [setNewPage] = useState(false);\r\n  const { page, setPage } = useRoute();\r\n\r\n  const handleLogin = () => {\r\n    setPage({ title: \"Admin Login\", isAdminPage: true, isLoggedin: false });\r\n    props.history.push(\"/login\");\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    const response = await logout(authTokens);\r\n    if (response.status === 200) {\r\n      setPage({\r\n        title: \"Submit Form Details\",\r\n        isAdminPage: false,\r\n        isLoggedin: false,\r\n      });\r\n      setAuthTokens(\"\");\r\n      setNewPage(true);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <Grommet theme={grommet}>\r\n      <Header background=\"dark-1\" pad=\"small\">\r\n        <Box direction=\"row\" align=\"center\" gap=\"small\">\r\n          <Avatar src={wissen} />\r\n          {page.title}\r\n        </Box>\r\n        <Nav direction=\"row\">\r\n          {!page.isAdminPage && (\r\n            <Button\r\n              primary\r\n              label=\"Admin Login\"\r\n              onClick={handleLogin}\r\n              {...props}\r\n            />\r\n          )}\r\n          {page.isLoggedin && (\r\n            <Button primary label=\"Logout\" onClick={handleLogout} {...props} />\r\n          )}\r\n        </Nav>\r\n      </Header>\r\n    </Grommet>\r\n  );\r\n};\r\n\r\nexport default withRouter(OnHeaderNav);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/auth\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  const { authTokens } = useAuth();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (authTokens) {\r\n          console.log('tokens are' ,authTokens)\r\n          return <Component {...props} />;\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport ReusableForm from \"./components/ReusableForm/ReusableForm\";\nimport Login from \"./components/Login/Login\";\nimport UsersTable from \"./components/UsersTable/UsersTable\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport ProtectedRoute from \"./protectedRoutes/route\";\nimport { AuthContext } from \"./context/auth\";\nimport { RouteContext } from \"./context/route\";\n\nfunction App() {\n  const existingTokens = !!localStorage.getItem(\"tokens\")\n    ? JSON.parse(localStorage.getItem(\"tokens\"))\n    : \"\";\n  const [authTokens, setAuthTokens] = useState(existingTokens);\n  const [page, setPage] = useState({\n    title: \"Submit From Details\",\n    isAdminPage: !!existingTokens,\n    isLoggedin: existingTokens,\n  });\n\n  const setTokens = (data) => {\n    localStorage.setItem(\"tokens\", JSON.stringify(data));\n    setAuthTokens(data);\n  };\n\n  return (\n    <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\n      <div className=\"App\">\n        <BrowserRouter>\n          <RouteContext.Provider value={{ page, setPage }}>\n            <Navbar />\n            <Switch>\n              <Route exact path=\"/\" component={ReusableForm} />\n              <Route exact path=\"/login\" component={Login} />\n              <ProtectedRoute exact path=\"/users\" component={UsersTable} />\n            </Switch>\n          </RouteContext.Provider>\n        </BrowserRouter>\n      </div>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}